//This program will help introduce the grep and cut commands to find certain IPs.

If the question asks for top 10 IPs
	input command here cut -d ';' -f 3,5 filename.txt | sort | uniq -c | sort -n | head
		print “Top 10 IPs: ”

If the question asks for top 10 source IPs:
		input command here cut -d ';' -f 3 file-name.txt | head
			print  “Top 10 source IPs: ”

If the question asks for top 10 destination IPs:
	input command here cut -d ';' -f 5 filename.txt | sort | uniq -c | sort -n | head
		print “Top 10 Destination IPs: ”

If the question asks for top 10 ports:
	input command here cut -d ';' -f 4,6 filename.txt | sort | uniq -c | sort -n | head
		print “Top 10 Ports: ”


import binascii
import base64
import hashlib

def hex2ascii():

  hexstring = input("Enter your code: ")
  a_string = bytes.fromhex(hexstring)
  a_string = a_string.decode("ascii")
  print(a_string)


def ascii2hex():

  x = input("Enter your code: ")
  output = x.encode('utf-8').hex()
  print(output)



def base_e():

  message = input("Enter your code: ")
  message_bytes = message.encode('ascii')
  base64_bytes = base64.b64encode(message_bytes)
  base64_message = base64_bytes.decode('ascii')
  print(base64_message)


def base_d():

  base64_message = input('Enter your code: ')
  base64_bytes = base64_message.encode('ascii')
  message_bytes = base64.b64decode(base64_bytes)
  message = message_bytes.decode('ascii')
  print(message)




def bin_d():

  binmess = input('Enter your code: ')
  binary = binascii.a2b_uu(binmess)
  print(binary)


def bin_e(): 

  byte_array = input('Enter your code: ').encode()
  binary_int = int.from_bytes(byte_array, 'big')
  binary_string = bin(binary_int)
  print(binary_string)



def md_5():

  md_c = input('Enter text to generate md5 hash: ')
  print(hashlib.md5(md_c.encode('utf-8')).hexdigest())



def sha():

  sha_txt = input('Enter text to generate hash: ')
  result = hashlib.sha256(sha_txt.encode())
  print(result.hexdigest())


def log():

  entrtxt = input('Enter text to split: ')
  a,b,c,d = entrtxt.split()
  print(d)
